package konyvtar;

import java.io.File;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;



/**
 *
 * @author Gergő
 */
public class Gui extends javax.swing.JFrame {
    /** Creates new form Gui */
    private final User user=new User();
    protected Login loginWindow=new Login();
    private JFileChooser chooseImage;
    
    public Gui() {
        initComponents();
    }
    
    public boolean checkLogin(){
        if(!user.loginValue()){
            this.setVisible(false);
            loginWindow.setVisible(true);
            return true;
        }else{
            setDisplayName(user.getUsername());
        }
        return false;
    }

    protected void returnLogin(int id){
        this.setVisible(true);
        user.setLogin(true);
        user.setId(id);
        setDisplayName(user.getUsername());
    }
    
    private void setDisplayName(String newName){
        displayName.setText(newName);
    }
    
    private void logout(){
        user.setLogin(false);
        checkLogin();
    }
    
    private void switchPanel(javax.swing.JPanel panel){
        mainPanel.removeAll();
        mainPanel.add(panel);
    }
    
    private void updateBookISBN(){
        if(!uploadBookISBN.getText().equals("")){
            dbConnect db=new dbConnect();
            ResultSet result = db.getResult("Select * from books Where ISBN='"+uploadBookISBN.getText()+"'");
             try{
                if(result.next()){
                    uploadBookTitle.setText(result.getString("BookTitle"));
                    uploadBookPublisher.setText(result.getString("Publisher"));
                    uploadBookYear.setValue(result.getInt("YearOfPublication"));
                    ResultSet author = db.getResult("Select name from author Where id='"+result.getInt("AuthorId")+"'");
                    if(author.next())
                        uploadBookAuthor.setText(author.getString("name"));
                    else
                        uploadBookAuthor.setText("Ismeretlen");
                }else{
                    uploadBookTitle.setText("");
                    uploadBookPublisher.setText("");
                    uploadBookYear.setValue(0);
                    uploadBookAuthor.setText("");
                }
            }catch(Exception e){
                System.err.println(e.getMessage());
                JOptionPane.showMessageDialog(rootPane, "SQL error Kérlek próbáld újra késöbb!","Hiba",JOptionPane.ERROR_MESSAGE);
            }
        }else{
            uploadBookTitle.setText("");
            uploadBookPublisher.setText("");
            uploadBookYear.setValue(0);
            uploadBookAuthor.setText("");
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuPanel = new javax.swing.JPanel();
        displayName = new javax.swing.JLabel();
        borrowButton = new javax.swing.JButton();
        newBookButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        mainPanel = new javax.swing.JLayeredPane();
        borrow = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        CardNumber = new javax.swing.JTextField();
        borrowStockNum = new javax.swing.JTextField();
        UpBorrow = new javax.swing.JButton();
        scannerCardBorrow = new javax.swing.JToggleButton();
        scannerStockNumBorrow = new javax.swing.JToggleButton();
        jLabel6 = new javax.swing.JLabel();
        borrowDate = new com.toedter.calendar.JDateChooser();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        borrowStockNumBack = new javax.swing.JTextField();
        scannerStockNumBorrowBack = new javax.swing.JToggleButton();
        borrowBackButton = new javax.swing.JButton();
        uploadBook = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        uploadBookAuthor = new javax.swing.JTextField();
        uploadBookTitle = new javax.swing.JTextField();
        uploadBookISBN = new javax.swing.JTextField();
        uploadBookSubmit = new javax.swing.JButton();
        scannerISBNupload = new javax.swing.JToggleButton();
        uploadBookStockNum = new javax.swing.JTextField();
        scannerStockNumUpload = new javax.swing.JToggleButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        uploadBookYear = new com.toedter.calendar.JYearChooser();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        uploadBookPublisher = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        fileChooserButtonNew = new javax.swing.JButton();
        fileChooserStringNew = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Main");

        MenuPanel.setBackground(new java.awt.Color(51, 153, 255));

        displayName.setText("jLabel1");

        borrowButton.setText("Kölcsönzés");
        borrowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrowButtonActionPerformed(evt);
            }
        });

        newBookButton.setText("Új Könyv");
        newBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBookButtonActionPerformed(evt);
            }
        });

        jButton3.setText("jButton3");

        jButton4.setText("Kijelentkezés");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MenuPanelLayout = new javax.swing.GroupLayout(MenuPanel);
        MenuPanel.setLayout(MenuPanelLayout);
        MenuPanelLayout.setHorizontalGroup(
            MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayName, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addGap(180, 180, 180)
                .addComponent(borrowButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newBookButton, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addGap(20, 20, 20))
        );
        MenuPanelLayout.setVerticalGroup(
            MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MenuPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayName)
                    .addComponent(borrowButton)
                    .addComponent(newBookButton)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        switchPanel(borrow);

        jLabel1.setText("Kártya azonosító:");

        jLabel2.setText("Könyv Azonosító:");

        CardNumber.setText("kártyaszám");

        borrowStockNum.setText("könyvtári szám");

        UpBorrow.setText("Küldés");
        UpBorrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpBorrowActionPerformed(evt);
            }
        });

        scannerCardBorrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scannerCardBorrowActionPerformed(evt);
            }
        });

        scannerStockNumBorrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scannerStockNumBorrowActionPerformed(evt);
            }
        });

        jLabel6.setText("Visszahozás Dátuma:");

        borrowDate.setMinSelectableDate(new Date(System.currentTimeMillis()));

        jSeparator2.setBackground(new java.awt.Color(102, 102, 255));
        jSeparator2.setForeground(new java.awt.Color(102, 102, 255));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel13.setText("Köynv kikölcsönzése");

        jLabel14.setText("Kikölcsönzött könyv leadása");

        jLabel15.setText("Könyv Azonosító:");

        borrowStockNumBack.setText("könyvtári szám");

        scannerStockNumBorrowBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scannerStockNumBorrowBackActionPerformed(evt);
            }
        });

        borrowBackButton.setText("Küldés");
        borrowBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrowBackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout borrowLayout = new javax.swing.GroupLayout(borrow);
        borrow.setLayout(borrowLayout);
        borrowLayout.setHorizontalGroup(
            borrowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(borrowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(borrowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(borrowLayout.createSequentialGroup()
                        .addGroup(borrowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(borrowLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(borrowDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(borrowLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(borrowStockNum))
                            .addGroup(borrowLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addGroup(borrowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(CardNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(borrowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(borrowLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(borrowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(borrowLayout.createSequentialGroup()
                                        .addComponent(scannerStockNumBorrow)
                                        .addContainerGap(400, Short.MAX_VALUE))
                                    .addGroup(borrowLayout.createSequentialGroup()
                                        .addComponent(scannerCardBorrow)
                                        .addGap(53, 53, 53)
                                        .addGroup(borrowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(borrowLayout.createSequentialGroup()
                                                .addComponent(borrowBackButton)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(borrowLayout.createSequentialGroup()
                                                .addComponent(jLabel15)
                                                .addGap(18, 18, 18)
                                                .addComponent(borrowStockNumBack)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(scannerStockNumBorrowBack)
                                                .addGap(60, 60, 60))))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, borrowLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel14)
                                .addGap(107, 107, 107))))
                    .addGroup(borrowLayout.createSequentialGroup()
                        .addComponent(UpBorrow)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(borrowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(borrowLayout.createSequentialGroup()
                    .addGap(354, 354, 354)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(355, Short.MAX_VALUE)))
        );
        borrowLayout.setVerticalGroup(
            borrowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(borrowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(borrowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(borrowLayout.createSequentialGroup()
                        .addGroup(borrowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addGap(45, 45, 45)
                        .addGroup(borrowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(CardNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scannerCardBorrow, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(borrowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(borrowStockNumBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(scannerStockNumBorrowBack, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(borrowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(borrowStockNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scannerStockNumBorrow, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(borrowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(borrowDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addGroup(borrowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UpBorrow)
                    .addComponent(borrowBackButton))
                .addContainerGap())
            .addGroup(borrowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE))
        );

        jLabel3.setText("Iró");

        jLabel4.setText("Cím");

        jLabel5.setText("ISBN");

        uploadBookISBN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                uploadBookISBNKeyReleased(evt);
            }
        });

        uploadBookSubmit.setText("Küldés");
        uploadBookSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadBookSubmitActionPerformed(evt);
            }
        });

        scannerISBNupload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scannerISBNuploadActionPerformed(evt);
            }
        });

        scannerStockNumUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scannerStockNumUploadActionPerformed(evt);
            }
        });

        jLabel7.setText("Könyvtári szám");

        jLabel8.setText("Kiadás Dátuma");

        jSeparator1.setBackground(new java.awt.Color(102, 102, 255));
        jSeparator1.setForeground(new java.awt.Color(102, 102, 255));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel9.setText("Új raktári könyv");
        jLabel9.setToolTipText("Kötelező megadni");

        jLabel10.setText("Új könyv adatai");
        jLabel10.setToolTipText("Megadásuk csak akkor kötelező ha a könyv nem szerepel még az adatbázisban");

        jLabel11.setText("Kiadó:");

        jLabel12.setText("Kép:");

        fileChooserButtonNew.setText("Tallózás");
        fileChooserButtonNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserButtonNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout uploadBookLayout = new javax.swing.GroupLayout(uploadBook);
        uploadBook.setLayout(uploadBookLayout);
        uploadBookLayout.setHorizontalGroup(
            uploadBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uploadBookLayout.createSequentialGroup()
                .addGroup(uploadBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(uploadBookLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(uploadBookSubmit))
                    .addGroup(uploadBookLayout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jLabel9))
                    .addGroup(uploadBookLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(uploadBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(uploadBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(uploadBookLayout.createSequentialGroup()
                                .addComponent(uploadBookStockNum)
                                .addGap(18, 18, 18)
                                .addComponent(scannerStockNumUpload))
                            .addGroup(uploadBookLayout.createSequentialGroup()
                                .addComponent(uploadBookISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(scannerISBNupload)))))
                .addGap(70, 70, 70)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(uploadBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(uploadBookLayout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(jLabel10)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(uploadBookLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(uploadBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel8))
                        .addGap(16, 16, 16)
                        .addGroup(uploadBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(uploadBookLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(uploadBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(uploadBookAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                                    .addComponent(uploadBookTitle)))
                            .addComponent(uploadBookPublisher)
                            .addComponent(uploadBookYear, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                            .addComponent(fileChooserStringNew))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fileChooserButtonNew)
                        .addGap(19, 19, 19))))
        );
        uploadBookLayout.setVerticalGroup(
            uploadBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uploadBookLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(uploadBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(uploadBookLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(48, 48, 48)
                        .addGroup(uploadBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(uploadBookISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scannerISBNupload, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(uploadBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(uploadBookStockNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scannerStockNumUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(uploadBookSubmit))
                    .addGroup(uploadBookLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(42, 42, 42)
                        .addGroup(uploadBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(uploadBookAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(uploadBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(uploadBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(uploadBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(uploadBookPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(uploadBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(uploadBookYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(uploadBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(fileChooserButtonNew)
                            .addComponent(fileChooserStringNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 65, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        mainPanel.setLayer(borrow, javax.swing.JLayeredPane.DEFAULT_LAYER);
        mainPanel.setLayer(uploadBook, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(borrow, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(uploadBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(borrow, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(uploadBook, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MenuPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(MenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainPanel)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        logout();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void borrowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrowButtonActionPerformed
        switchPanel(borrow);
    }//GEN-LAST:event_borrowButtonActionPerformed

    private void newBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBookButtonActionPerformed
        switchPanel(uploadBook);
    }//GEN-LAST:event_newBookButtonActionPerformed

    private void scannerCardBorrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scannerCardBorrowActionPerformed
        if(scannerCardBorrow.isSelected()){
            CardNumber.setText(JOptionPane.showInputDialog(""));
            scannerCardBorrow.setSelected(false);
        }
    }//GEN-LAST:event_scannerCardBorrowActionPerformed

    private void scannerStockNumBorrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scannerStockNumBorrowActionPerformed
        if(scannerStockNumBorrow.isSelected()){
            borrowStockNum.setText(JOptionPane.showInputDialog(""));
            scannerStockNumBorrow.setSelected(false);
        }
    }//GEN-LAST:event_scannerStockNumBorrowActionPerformed

    private void scannerISBNuploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scannerISBNuploadActionPerformed
        if(scannerISBNupload.isSelected()){
            uploadBookISBN.setText(JOptionPane.showInputDialog(""));
            scannerISBNupload.setSelected(false);
            updateBookISBN();
        }
    }//GEN-LAST:event_scannerISBNuploadActionPerformed

    private void UpBorrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpBorrowActionPerformed
        if(CardNumber.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nem adtál meg kártya számot!","Hiba",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(borrowStockNum.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nem adtál meg könyv azonosítót!","Hiba",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(borrowDate.getDate()==null){
            JOptionPane.showMessageDialog(rootPane, "Nem adtál visszahozási dátumot!","Hiba",JOptionPane.ERROR_MESSAGE);
            return;
        }
        dbConnect db=new dbConnect();
        ResultSet result = db.getResult("Select id from cards Where id=\""+CardNumber.getText()+"\"");
        try{
            if(!result.next()){
                JOptionPane.showMessageDialog(rootPane, "Hibás kártyaszám!","Hiba",JOptionPane.ERROR_MESSAGE);
                return;
            }
            result = db.getResult("Select stockNum from stock Where stockNum=\""+borrowStockNum.getText()+"\"");
            if(!result.next()){
                JOptionPane.showMessageDialog(rootPane, "Hibás könyv azonosító!","Hiba",JOptionPane.ERROR_MESSAGE);
                return;
            }
            result = db.getResult("Select id,cardNum,stockNum,date from borrow where stockNum=\""+borrowStockNum.getText()+"\" and state=0");
            if(result.next()){
                String errorString=String.format("Kártyaszám:%s, Könyv azonosító:%s, Határidő:%s",result.getString("cardNum"),result.getString("stockNum"),result.getString("date"));
                JOptionPane.showMessageDialog(rootPane, "Ez a könyv ki van kölcsönözve: "+errorString,"Hiba",JOptionPane.ERROR_MESSAGE);
                return;
            }
            SimpleDateFormat sd=new SimpleDateFormat("yyyy-MM-dd");
            
            if (db.insertToSql("borrow(cardNum,stockNum,date,state)", String.format("VALUES( %s,%s,'%s',0 )",CardNumber.getText(),borrowStockNum.getText(),String.valueOf(sd.format(borrowDate.getDate()))))){
                JOptionPane.showMessageDialog(rootPane, "Sikeres kölcsönzés!","Info",JOptionPane.INFORMATION_MESSAGE);
                CardNumber.setText("kártyaszám");
                borrowStockNum.setText("könyvtári szám");
                borrowDate.setDate(null);
            }
            
            
        }catch(Exception e){
            System.err.println(e.getMessage());
            JOptionPane.showMessageDialog(rootPane, "SQL error Kérlek próbáld újra késöbb!","Hiba",JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_UpBorrowActionPerformed

    private void scannerStockNumUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scannerStockNumUploadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_scannerStockNumUploadActionPerformed

    private void fileChooserButtonNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserButtonNewActionPerformed
        chooseImage = new JFileChooser();
        chooseImage.setMultiSelectionEnabled(false);
        chooseImage.setCurrentDirectory(new File("C:\\tmp"));
        chooseImage.setAcceptAllFileFilterUsed(false);
        chooseImage.addChoosableFileFilter(new FileNameExtensionFilter("Image Files (.png, .jpg, .tif)", "jpg", "png", "tif"));
        int retVal = chooseImage.showOpenDialog(rootPane);
        if (retVal == JFileChooser.APPROVE_OPTION) {
            File selectedfiles = chooseImage.getSelectedFile();
            fileChooserStringNew.setText(selectedfiles.getName());
        }
        
    }//GEN-LAST:event_fileChooserButtonNewActionPerformed

    private void uploadBookSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadBookSubmitActionPerformed
        if(uploadBookISBN.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nem adtál meg ISBN számot!","Hiba",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(uploadBookStockNum.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nem adtál meg könyv azonosítót!","Hiba",JOptionPane.ERROR_MESSAGE);
            return;
        }
        dbConnect db=new dbConnect();
        ResultSet result = db.getResult("Select * from books Where ISBN='"+uploadBookISBN.getText()+"'");
        try{
            if(result.next()){
                ResultSet bookId = db.getResult("Select id from books Where ISBN="+uploadBookISBN.getText());
                if(bookId.next())
                    if (db.insertToSql("stock(bookId,stockNum)", String.format("VALUES(%s,%s)",bookId.getString("id"),uploadBookStockNum.getText())))
                        JOptionPane.showMessageDialog(rootPane, "Sikeres könyv feltötltés!","Info",JOptionPane.INFORMATION_MESSAGE);   
                    
            }else{

            }
       }catch(Exception e){
           System.err.println(e.getMessage());
           JOptionPane.showMessageDialog(rootPane, "SQL error Kérlek próbáld újra késöbb!","Hiba",JOptionPane.ERROR_MESSAGE);
       }
        
        
    }//GEN-LAST:event_uploadBookSubmitActionPerformed

    private void uploadBookISBNKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uploadBookISBNKeyReleased
        updateBookISBN();
    }//GEN-LAST:event_uploadBookISBNKeyReleased

    private void scannerStockNumBorrowBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scannerStockNumBorrowBackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_scannerStockNumBorrowBackActionPerformed

    private void borrowBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrowBackButtonActionPerformed
        if(borrowStockNumBack.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nem adtál meg könyv azonosítót!","Hiba",JOptionPane.ERROR_MESSAGE);
            return;
        }
        dbConnect db=new dbConnect();
        SimpleDateFormat sd=new SimpleDateFormat("yyyy-MM-dd");
        if(db.updateSql("borrow", "state=1, returnDate='"+sd.format(System.currentTimeMillis())+"'", "where stockNum="+borrowStockNumBack.getText()+" and state=0")){
            JOptionPane.showMessageDialog(rootPane, "Sikeres könyv leadás!","Info",JOptionPane.INFORMATION_MESSAGE);
            borrowStockNumBack.setText("");
        }
    }//GEN-LAST:event_borrowBackButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CardNumber;
    private javax.swing.JPanel MenuPanel;
    private javax.swing.JButton UpBorrow;
    private javax.swing.JPanel borrow;
    private javax.swing.JButton borrowBackButton;
    private javax.swing.JButton borrowButton;
    private com.toedter.calendar.JDateChooser borrowDate;
    private javax.swing.JTextField borrowStockNum;
    private javax.swing.JTextField borrowStockNumBack;
    private javax.swing.JLabel displayName;
    private javax.swing.JButton fileChooserButtonNew;
    private javax.swing.JTextField fileChooserStringNew;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLayeredPane mainPanel;
    private javax.swing.JButton newBookButton;
    private javax.swing.JToggleButton scannerCardBorrow;
    private javax.swing.JToggleButton scannerISBNupload;
    private javax.swing.JToggleButton scannerStockNumBorrow;
    private javax.swing.JToggleButton scannerStockNumBorrowBack;
    private javax.swing.JToggleButton scannerStockNumUpload;
    private javax.swing.JPanel uploadBook;
    private javax.swing.JTextField uploadBookAuthor;
    private javax.swing.JTextField uploadBookISBN;
    private javax.swing.JTextField uploadBookPublisher;
    private javax.swing.JTextField uploadBookStockNum;
    private javax.swing.JButton uploadBookSubmit;
    private javax.swing.JTextField uploadBookTitle;
    private com.toedter.calendar.JYearChooser uploadBookYear;
    // End of variables declaration//GEN-END:variables

}
